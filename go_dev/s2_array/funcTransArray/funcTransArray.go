package funcTransArray


// 使用指针在函数间传递大数组



// 函数 foo 接受一个指向 100 万个整型值的数组的指针
func foo(array *[1e6]int) {

}

// 分配一个需要 8 MB 的数组
var array [1e6]int


// 将数组的地址传递给函数 foo
func Foo(){
	foo(&array)
}

/*
函数 foo 接受一个指向 100 万个整型值的数组的指针。现在将数组的地址传入函数，
只需要在栈上分配 8 字节的内存给指针就可以。
这个操作会更有效地利用内存，性能也更好。不过要意识到，因为现在传递的是指针，
所以如果改变指针指向的值，会改变共享的内存。如你所见，使用切片能更好地处理这类共享问题。
*/